/*
 * This file is generated by jOOQ.
 */
package raubach.fricklweb.server.database.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import raubach.fricklweb.server.database.Frickl;
import raubach.fricklweb.server.database.tables.records.LatLngsRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LatLngs extends TableImpl<LatLngsRecord> {

    /**
     * The reference instance of <code>frickl.lat_lngs</code>
     */
    public static final LatLngs LAT_LNGS = new LatLngs();
    private static final long serialVersionUID = 38597773;
    /**
     * The column <code>frickl.lat_lngs.id</code>. Auto incremented id of this table.
     */
    public final TableField<LatLngsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "Auto incremented id of this table.");
    /**
     * The column <code>frickl.lat_lngs.path</code>. The path to the image relative to the base path of the setup.
     */
    public final TableField<LatLngsRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "The path to the image relative to the base path of the setup.");
    /**
     * The column <code>frickl.lat_lngs.album_id</code>. The album this image belongs to. This will be the containing folder.
     */
    public final TableField<LatLngsRecord, Integer> ALBUM_ID = createField("album_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "The album this image belongs to. This will be the containing folder.");
    /**
     * The column <code>frickl.lat_lngs.is_public</code>.
     */
    public final TableField<LatLngsRecord, Byte> IS_PUBLIC = createField("is_public", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");
    /**
     * The column <code>frickl.lat_lngs.latitude</code>.
     */
    public final TableField<LatLngsRecord, BigDecimal> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.DECIMAL(64, 10), this, "");
    /**
     * The column <code>frickl.lat_lngs.longitude</code>.
     */
    public final TableField<LatLngsRecord, BigDecimal> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.DECIMAL(64, 10), this, "");

    /**
     * Create a <code>frickl.lat_lngs</code> table reference
     */
    public LatLngs() {
        this(DSL.name("lat_lngs"), null);
    }

    /**
     * Create an aliased <code>frickl.lat_lngs</code> table reference
     */
    public LatLngs(String alias) {
        this(DSL.name(alias), LAT_LNGS);
    }

    /**
     * Create an aliased <code>frickl.lat_lngs</code> table reference
     */
    public LatLngs(Name alias) {
        this(alias, LAT_LNGS);
    }

    private LatLngs(Name alias, Table<LatLngsRecord> aliased) {
        this(alias, aliased, null);
    }

    private LatLngs(Name alias, Table<LatLngsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> LatLngs(Table<O> child, ForeignKey<O, LatLngsRecord> key) {
        super(child, key, LAT_LNGS);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LatLngsRecord> getRecordType() {
        return LatLngsRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Frickl.FRICKL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LatLngs as(String alias) {
        return new LatLngs(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LatLngs as(Name alias) {
        return new LatLngs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LatLngs rename(String name) {
        return new LatLngs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LatLngs rename(Name name) {
        return new LatLngs(name, null);
    }
}
