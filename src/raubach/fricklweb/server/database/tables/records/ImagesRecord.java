/*
 * This file is generated by jOOQ.
 */
package raubach.fricklweb.server.database.tables.records;


import org.jooq.*;
import org.jooq.impl.*;

import java.sql.*;

import javax.annotation.*;

import raubach.fricklweb.server.database.tables.*;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.11.9"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ImagesRecord extends UpdatableRecordImpl<ImagesRecord> implements Record6<Integer, String, Object, Integer, Timestamp, Timestamp>
{

	private static final long serialVersionUID = -773540640;

	/**
	 * Create a detached ImagesRecord
	 */
	public ImagesRecord()
	{
		super(Images.IMAGES);
	}

	/**
	 * Create a detached, initialised ImagesRecord
	 */
	public ImagesRecord(Integer id, String path, Object exif, Integer albumId, Timestamp createdOn, Timestamp updatedOn)
	{
		super(Images.IMAGES);

		set(0, id);
		set(1, path);
		set(2, exif);
		set(3, albumId);
		set(4, createdOn);
		set(5, updatedOn);
	}

	/**
	 * Getter for <code>frickl.images.id</code>.
	 */
	public Integer getId()
	{
		return (Integer) get(0);
	}

	/**
	 * Setter for <code>frickl.images.id</code>.
	 */
	public void setId(Integer value)
	{
		set(0, value);
	}

	/**
	 * Getter for <code>frickl.images.path</code>.
	 */
	public String getPath()
	{
		return (String) get(1);
	}

	/**
	 * Setter for <code>frickl.images.path</code>.
	 */
	public void setPath(String value)
	{
		set(1, value);
	}

	/**
	 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
	 */
	@java.lang.Deprecated
	public Object getExif()
	{
		return get(2);
	}

	/**
	 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
	 */
	@java.lang.Deprecated
	public void setExif(Object value)
	{
		set(2, value);
	}

	/**
	 * Getter for <code>frickl.images.album_id</code>.
	 */
	public Integer getAlbumId()
	{
		return (Integer) get(3);
	}

	/**
	 * Setter for <code>frickl.images.album_id</code>.
	 */
	public void setAlbumId(Integer value)
	{
		set(3, value);
	}

	/**
	 * Getter for <code>frickl.images.created_on</code>.
	 */
	public Timestamp getCreatedOn()
	{
		return (Timestamp) get(4);
	}

	/**
	 * Setter for <code>frickl.images.created_on</code>.
	 */
	public void setCreatedOn(Timestamp value)
	{
		set(4, value);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * Getter for <code>frickl.images.updated_on</code>.
	 */
	public Timestamp getUpdatedOn()
	{
		return (Timestamp) get(5);
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * Setter for <code>frickl.images.updated_on</code>.
	 */
	public void setUpdatedOn(Timestamp value)
	{
		set(5, value);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key()
	{
		return (Record1) super.key();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, Object, Integer, Timestamp, Timestamp> fieldsRow()
	{
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, Object, Integer, Timestamp, Timestamp> valuesRow()
	{
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1()
	{
		return Images.IMAGES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2()
	{
		return Images.IMAGES.PATH;
	}

	/**
	 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
	 */
	@java.lang.Deprecated
	@Override
	public Field<Object> field3()
	{
		return Images.IMAGES.EXIF;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4()
	{
		return Images.IMAGES.ALBUM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5()
	{
		return Images.IMAGES.CREATED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field6()
	{
		return Images.IMAGES.UPDATED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer component1()
	{
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String component2()
	{
		return getPath();
	}

	/**
	 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
	 */
	@java.lang.Deprecated
	@Override
	public Object component3()
	{
		return getExif();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer component4()
	{
		return getAlbumId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp component5()
	{
		return getCreatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp component6()
	{
		return getUpdatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1()
	{
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2()
	{
		return getPath();
	}

	/**
	 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
	 */
	@java.lang.Deprecated
	@Override
	public Object value3()
	{
		return getExif();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4()
	{
		return getAlbumId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5()
	{
		return getCreatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value6()
	{
		return getUpdatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImagesRecord value1(Integer value)
	{
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImagesRecord value2(String value)
	{
		setPath(value);
		return this;
	}

	/**
	 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
	 */
	@java.lang.Deprecated
	@Override
	public ImagesRecord value3(Object value)
	{
		setExif(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImagesRecord value4(Integer value)
	{
		setAlbumId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImagesRecord value5(Timestamp value)
	{
		setCreatedOn(value);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImagesRecord value6(Timestamp value)
	{
		setUpdatedOn(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImagesRecord values(Integer value1, String value2, Object value3, Integer value4, Timestamp value5, Timestamp value6)
	{
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}
}
