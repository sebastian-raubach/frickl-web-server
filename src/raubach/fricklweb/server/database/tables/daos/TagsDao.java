/*
 * This file is generated by jOOQ.
 */
package raubach.fricklweb.server.database.tables.daos;


import org.jooq.*;
import org.jooq.impl.*;

import java.sql.*;
import java.util.*;

import javax.annotation.*;

import raubach.fricklweb.server.database.tables.*;
import raubach.fricklweb.server.database.tables.records.*;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.11.9"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TagsDao extends DAOImpl<TagsRecord, raubach.fricklweb.server.database.tables.pojos.Tags, Integer>
{

	/**
	 * Create a new TagsDao without any configuration
	 */
	public TagsDao()
	{
		super(Tags.TAGS, raubach.fricklweb.server.database.tables.pojos.Tags.class);
	}

	/**
	 * Create a new TagsDao with an attached configuration
	 */
	public TagsDao(Configuration configuration)
	{
		super(Tags.TAGS, raubach.fricklweb.server.database.tables.pojos.Tags.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(raubach.fricklweb.server.database.tables.pojos.Tags object)
	{
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<raubach.fricklweb.server.database.tables.pojos.Tags> fetchById(Integer... values)
	{
		return fetch(Tags.TAGS.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public raubach.fricklweb.server.database.tables.pojos.Tags fetchOneById(Integer value)
	{
		return fetchOne(Tags.TAGS.ID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<raubach.fricklweb.server.database.tables.pojos.Tags> fetchByName(String... values)
	{
		return fetch(Tags.TAGS.NAME, values);
	}

	/**
	 * Fetch records that have <code>created_on IN (values)</code>
	 */
	public List<raubach.fricklweb.server.database.tables.pojos.Tags> fetchByCreatedOn(Timestamp... values)
	{
		return fetch(Tags.TAGS.CREATED_ON, values);
	}

	/**
	 * Fetch records that have <code>updated_on IN (values)</code>
	 */
	public List<raubach.fricklweb.server.database.tables.pojos.Tags> fetchByUpdatedOn(Timestamp... values)
	{
		return fetch(Tags.TAGS.UPDATED_ON, values);
	}
}
