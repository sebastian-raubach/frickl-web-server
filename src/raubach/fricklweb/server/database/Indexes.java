/*
 * This file is generated by jOOQ.
 */
package raubach.fricklweb.server.database;


import org.jooq.*;
import org.jooq.impl.*;

import javax.annotation.*;

import raubach.fricklweb.server.database.tables.*;


/**
 * A class modelling indexes of tables of the <code>frickl</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Indexes
{

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index ALBUMS_BANNER_IMAGE_ID = Indexes0.ALBUMS_BANNER_IMAGE_ID;
    public static final Index ALBUMS_PARENT_ALBUM_ID = Indexes0.ALBUMS_PARENT_ALBUM_ID;
    public static final Index ALBUMS_PRIMARY         = Indexes0.ALBUMS_PRIMARY;
    public static final Index IMAGES_ALBUM_ID        = Indexes0.IMAGES_ALBUM_ID;
    public static final Index IMAGES_PRIMARY         = Indexes0.IMAGES_PRIMARY;
    public static final Index IMAGE_TAGS_PRIMARY     = Indexes0.IMAGE_TAGS_PRIMARY;
    public static final Index IMAGE_TAGS_TAG_ID      = Indexes0.IMAGE_TAGS_TAG_ID;
    public static final Index TAGS_PRIMARY           = Indexes0.TAGS_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0
    {
        public static Index ALBUMS_BANNER_IMAGE_ID = Internal.createIndex("banner_image_id", Albums.ALBUMS, new OrderField[]{Albums.ALBUMS.BANNER_IMAGE_ID}, false);
        public static Index ALBUMS_PARENT_ALBUM_ID = Internal.createIndex("parent_album_id", Albums.ALBUMS, new OrderField[]{Albums.ALBUMS.PARENT_ALBUM_ID}, false);
        public static Index ALBUMS_PRIMARY         = Internal.createIndex("PRIMARY", Albums.ALBUMS, new OrderField[]{Albums.ALBUMS.ID}, true);
        public static Index IMAGES_ALBUM_ID        = Internal.createIndex("album_id", Images.IMAGES, new OrderField[]{Images.IMAGES.ALBUM_ID}, false);
        public static Index IMAGES_PRIMARY         = Internal.createIndex("PRIMARY", Images.IMAGES, new OrderField[]{Images.IMAGES.ID}, true);
        public static Index IMAGE_TAGS_PRIMARY     = Internal.createIndex("PRIMARY", ImageTags.IMAGE_TAGS, new OrderField[]{ImageTags.IMAGE_TAGS.IMAGE_ID, ImageTags.IMAGE_TAGS.TAG_ID}, true);
        public static Index IMAGE_TAGS_TAG_ID      = Internal.createIndex("tag_id", ImageTags.IMAGE_TAGS, new OrderField[]{ImageTags.IMAGE_TAGS.TAG_ID}, false);
        public static Index TAGS_PRIMARY           = Internal.createIndex("PRIMARY", Tags.TAGS, new OrderField[]{Tags.TAGS.ID}, true);
    }
}
