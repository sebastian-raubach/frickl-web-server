/*
 * This file is generated by jOOQ.
 */
package raubach.fricklweb.server.database.tables.records;


import java.sql.Timestamp;

import jakarta.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;

import raubach.fricklweb.server.database.tables.AlbumAccessToken;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumAccessTokenRecord extends TableRecordImpl<AlbumAccessTokenRecord> implements Record6<Integer, String, String, Integer, String, Timestamp> {

    private static final long serialVersionUID = -1919127605;

    /**
     * Setter for <code>frickl.album_access_token.album_id</code>. Auto incremented id of this table.
     */
    public void setAlbumId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>frickl.album_access_token.album_id</code>. Auto incremented id of this table.
     */
    public Integer getAlbumId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>frickl.album_access_token.album_name</code>. The name of the album. Should ideally be relatively short.
     */
    public void setAlbumName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>frickl.album_access_token.album_name</code>. The name of the album. Should ideally be relatively short.
     */
    public String getAlbumName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>frickl.album_access_token.album_description</code>. Optional description of the album.
     */
    public void setAlbumDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>frickl.album_access_token.album_description</code>. Optional description of the album.
     */
    public String getAlbumDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>frickl.album_access_token.token_id</code>. Auto incremented id of this table.
     */
    public void setTokenId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>frickl.album_access_token.token_id</code>. Auto incremented id of this table.
     */
    public Integer getTokenId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>frickl.album_access_token.token_token</code>. The access token.
     */
    public void setTokenToken(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>frickl.album_access_token.token_token</code>. The access token.
     */
    public String getTokenToken() {
        return (String) get(4);
    }

    /**
     * Setter for <code>frickl.album_access_token.token_expires_on</code>. When this token expires.
     */
    public void setTokenExpiresOn(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>frickl.album_access_token.token_expires_on</code>. When this token expires.
     */
    public Timestamp getTokenExpiresOn() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, Integer, String, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, Integer, String, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AlbumAccessToken.ALBUM_ACCESS_TOKEN.ALBUM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AlbumAccessToken.ALBUM_ACCESS_TOKEN.ALBUM_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return AlbumAccessToken.ALBUM_ACCESS_TOKEN.ALBUM_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return AlbumAccessToken.ALBUM_ACCESS_TOKEN.TOKEN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return AlbumAccessToken.ALBUM_ACCESS_TOKEN.TOKEN_TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return AlbumAccessToken.ALBUM_ACCESS_TOKEN.TOKEN_EXPIRES_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getAlbumId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAlbumName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getAlbumDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getTokenId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getTokenToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getTokenExpiresOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAlbumId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAlbumName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAlbumDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getTokenId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getTokenToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getTokenExpiresOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumAccessTokenRecord value1(Integer value) {
        setAlbumId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumAccessTokenRecord value2(String value) {
        setAlbumName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumAccessTokenRecord value3(String value) {
        setAlbumDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumAccessTokenRecord value4(Integer value) {
        setTokenId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumAccessTokenRecord value5(String value) {
        setTokenToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumAccessTokenRecord value6(Timestamp value) {
        setTokenExpiresOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumAccessTokenRecord values(Integer value1, String value2, String value3, Integer value4, String value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlbumAccessTokenRecord
     */
    public AlbumAccessTokenRecord() {
        super(AlbumAccessToken.ALBUM_ACCESS_TOKEN);
    }

    /**
     * Create a detached, initialised AlbumAccessTokenRecord
     */
    public AlbumAccessTokenRecord(Integer albumId, String albumName, String albumDescription, Integer tokenId, String tokenToken, Timestamp tokenExpiresOn) {
        super(AlbumAccessToken.ALBUM_ACCESS_TOKEN);

        set(0, albumId);
        set(1, albumName);
        set(2, albumDescription);
        set(3, tokenId);
        set(4, tokenToken);
        set(5, tokenExpiresOn);
    }
}
