/*
 * This file is generated by jOOQ.
 */
package raubach.fricklweb.server.database.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import raubach.fricklweb.server.database.tables.AlbumCounts;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumCountsRecord extends UpdatableRecordImpl<AlbumCountsRecord> implements Record5<Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1092192141;

    /**
     * Setter for <code>frickl.album_counts.album_id</code>.
     */
    public void setAlbumId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>frickl.album_counts.album_id</code>.
     */
    public Integer getAlbumId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>frickl.album_counts.image_count</code>.
     */
    public void setImageCount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>frickl.album_counts.image_count</code>.
     */
    public Integer getImageCount() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>frickl.album_counts.image_count_public</code>.
     */
    public void setImageCountPublic(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>frickl.album_counts.image_count_public</code>.
     */
    public Integer getImageCountPublic() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>frickl.album_counts.album_count</code>.
     */
    public void setAlbumCount(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>frickl.album_counts.album_count</code>.
     */
    public Integer getAlbumCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>frickl.album_counts.image_view_count</code>.
     */
    public void setImageViewCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>frickl.album_counts.image_view_count</code>.
     */
    public Integer getImageViewCount() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AlbumCounts.ALBUM_COUNTS.ALBUM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return AlbumCounts.ALBUM_COUNTS.IMAGE_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return AlbumCounts.ALBUM_COUNTS.IMAGE_COUNT_PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return AlbumCounts.ALBUM_COUNTS.ALBUM_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return AlbumCounts.ALBUM_COUNTS.IMAGE_VIEW_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getAlbumId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getImageCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getImageCountPublic();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getAlbumCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getImageViewCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAlbumId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getImageCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getImageCountPublic();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getAlbumCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getImageViewCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumCountsRecord value1(Integer value) {
        setAlbumId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumCountsRecord value2(Integer value) {
        setImageCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumCountsRecord value3(Integer value) {
        setImageCountPublic(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumCountsRecord value4(Integer value) {
        setAlbumCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumCountsRecord value5(Integer value) {
        setImageViewCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumCountsRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlbumCountsRecord
     */
    public AlbumCountsRecord() {
        super(AlbumCounts.ALBUM_COUNTS);
    }

    /**
     * Create a detached, initialised AlbumCountsRecord
     */
    public AlbumCountsRecord(Integer albumId, Integer imageCount, Integer imageCountPublic, Integer albumCount, Integer imageViewCount) {
        super(AlbumCounts.ALBUM_COUNTS);

        set(0, albumId);
        set(1, imageCount);
        set(2, imageCountPublic);
        set(3, albumCount);
        set(4, imageViewCount);
    }
}
