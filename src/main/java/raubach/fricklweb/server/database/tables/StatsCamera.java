/*
 * This file is generated by jOOQ.
 */
package raubach.fricklweb.server.database.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import raubach.fricklweb.server.database.Frickl;
import raubach.fricklweb.server.database.tables.records.StatsCameraRecord;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatsCamera extends TableImpl<StatsCameraRecord> {

    private static final long serialVersionUID = 1851580117;

    /**
     * The reference instance of <code>frickl.stats_camera</code>
     */
    public static final StatsCamera STATS_CAMERA = new StatsCamera();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatsCameraRecord> getRecordType() {
        return StatsCameraRecord.class;
    }

    /**
     * The column <code>frickl.stats_camera.camera</code>.
     */
    public final TableField<StatsCameraRecord, String> CAMERA = createField("camera", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>frickl.stats_camera.count</code>.
     */
    public final TableField<StatsCameraRecord, Long> COUNT = createField("count", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>frickl.stats_camera</code> table reference
     */
    public StatsCamera() {
        this(DSL.name("stats_camera"), null);
    }

    /**
     * Create an aliased <code>frickl.stats_camera</code> table reference
     */
    public StatsCamera(String alias) {
        this(DSL.name(alias), STATS_CAMERA);
    }

    /**
     * Create an aliased <code>frickl.stats_camera</code> table reference
     */
    public StatsCamera(Name alias) {
        this(alias, STATS_CAMERA);
    }

    private StatsCamera(Name alias, Table<StatsCameraRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatsCamera(Name alias, Table<StatsCameraRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> StatsCamera(Table<O> child, ForeignKey<O, StatsCameraRecord> key) {
        super(child, key, STATS_CAMERA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Frickl.FRICKL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatsCamera as(String alias) {
        return new StatsCamera(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatsCamera as(Name alias) {
        return new StatsCamera(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatsCamera rename(String name) {
        return new StatsCamera(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatsCamera rename(Name name) {
        return new StatsCamera(name, null);
    }
}
