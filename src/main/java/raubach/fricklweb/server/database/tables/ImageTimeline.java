/*
 * This file is generated by jOOQ.
 */
package raubach.fricklweb.server.database.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import raubach.fricklweb.server.database.Frickl;
import raubach.fricklweb.server.database.tables.records.ImageTimelineRecord;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageTimeline extends TableImpl<ImageTimelineRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>frickl.image_timeline</code>
     */
    public static final ImageTimeline IMAGE_TIMELINE = new ImageTimeline();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ImageTimelineRecord> getRecordType() {
        return ImageTimelineRecord.class;
    }

    /**
     * The column <code>frickl.image_timeline.year</code>.
     */
    public final TableField<ImageTimelineRecord, Integer> YEAR = createField(DSL.name("year"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>frickl.image_timeline.month</code>.
     */
    public final TableField<ImageTimelineRecord, Integer> MONTH = createField(DSL.name("month"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>frickl.image_timeline.ids</code>.
     */
    public final TableField<ImageTimelineRecord, JSON> IDS = createField(DSL.name("ids"), SQLDataType.JSON, this, "");

    private ImageTimeline(Name alias, Table<ImageTimelineRecord> aliased) {
        this(alias, aliased, null);
    }

    private ImageTimeline(Name alias, Table<ImageTimelineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `image_timeline` as select year(`frickl`.`images`.`created_on`) AS `year`,month(`frickl`.`images`.`created_on`) AS `month`,json_arrayagg(`frickl`.`images`.`id`) AS `ids` from `frickl`.`images` where ((year(`frickl`.`images`.`created_on`) is not null) and (month(`frickl`.`images`.`created_on`) is not null)) group by `year`,`month` order by `year` desc,`month` desc"));
    }

    /**
     * Create an aliased <code>frickl.image_timeline</code> table reference
     */
    public ImageTimeline(String alias) {
        this(DSL.name(alias), IMAGE_TIMELINE);
    }

    /**
     * Create an aliased <code>frickl.image_timeline</code> table reference
     */
    public ImageTimeline(Name alias) {
        this(alias, IMAGE_TIMELINE);
    }

    /**
     * Create a <code>frickl.image_timeline</code> table reference
     */
    public ImageTimeline() {
        this(DSL.name("image_timeline"), null);
    }

    public <O extends Record> ImageTimeline(Table<O> child, ForeignKey<O, ImageTimelineRecord> key) {
        super(child, key, IMAGE_TIMELINE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Frickl.FRICKL;
    }

    @Override
    public ImageTimeline as(String alias) {
        return new ImageTimeline(DSL.name(alias), this);
    }

    @Override
    public ImageTimeline as(Name alias) {
        return new ImageTimeline(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ImageTimeline rename(String name) {
        return new ImageTimeline(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ImageTimeline rename(Name name) {
        return new ImageTimeline(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, JSON> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
