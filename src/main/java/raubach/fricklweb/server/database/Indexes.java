/*
 * This file is generated by jOOQ.
 */
package raubach.fricklweb.server.database;


import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;

import raubach.fricklweb.server.database.tables.AccessTokens;
import raubach.fricklweb.server.database.tables.AlbumTokens;
import raubach.fricklweb.server.database.tables.Albums;
import raubach.fricklweb.server.database.tables.ImageTags;
import raubach.fricklweb.server.database.tables.Images;
import raubach.fricklweb.server.database.tables.SchemaVersion;
import raubach.fricklweb.server.database.tables.Tags;


/**
 * A class modelling indexes of tables of the <code>frickl</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index ACCESS_TOKENS_ACCESS_TOKENS_TOKEN = Indexes0.ACCESS_TOKENS_ACCESS_TOKENS_TOKEN;
    public static final Index ACCESS_TOKENS_PRIMARY = Indexes0.ACCESS_TOKENS_PRIMARY;
    public static final Index ALBUM_TOKENS_ALBUM_TOKENS_IBFK_1 = Indexes0.ALBUM_TOKENS_ALBUM_TOKENS_IBFK_1;
    public static final Index ALBUM_TOKENS_ALBUM_TOKENS_IBFK_2 = Indexes0.ALBUM_TOKENS_ALBUM_TOKENS_IBFK_2;
    public static final Index ALBUM_TOKENS_PRIMARY = Indexes0.ALBUM_TOKENS_PRIMARY;
    public static final Index ALBUMS_BANNER_IMAGE_ID = Indexes0.ALBUMS_BANNER_IMAGE_ID;
    public static final Index ALBUMS_PARENT_ALBUM_ID = Indexes0.ALBUMS_PARENT_ALBUM_ID;
    public static final Index ALBUMS_PRIMARY = Indexes0.ALBUMS_PRIMARY;
    public static final Index IMAGE_TAGS_PRIMARY = Indexes0.IMAGE_TAGS_PRIMARY;
    public static final Index IMAGE_TAGS_TAG_ID = Indexes0.IMAGE_TAGS_TAG_ID;
    public static final Index IMAGES_IMAGES_DATA_TYPE = Indexes0.IMAGES_IMAGES_DATA_TYPE;
    public static final Index IMAGES_IMAGES_IBFK_1 = Indexes0.IMAGES_IMAGES_IBFK_1;
    public static final Index IMAGES_IMAGES_IS_PUBLIC = Indexes0.IMAGES_IMAGES_IS_PUBLIC;
    public static final Index IMAGES_PRIMARY = Indexes0.IMAGES_PRIMARY;
    public static final Index SCHEMA_VERSION_PRIMARY = Indexes0.SCHEMA_VERSION_PRIMARY;
    public static final Index SCHEMA_VERSION_SCHEMA_VERSION_S_IDX = Indexes0.SCHEMA_VERSION_SCHEMA_VERSION_S_IDX;
    public static final Index TAGS_PRIMARY = Indexes0.TAGS_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index ACCESS_TOKENS_ACCESS_TOKENS_TOKEN = Internal.createIndex("access_tokens_token", AccessTokens.ACCESS_TOKENS, new OrderField[] { AccessTokens.ACCESS_TOKENS.TOKEN }, false);
        public static Index ACCESS_TOKENS_PRIMARY = Internal.createIndex("PRIMARY", AccessTokens.ACCESS_TOKENS, new OrderField[] { AccessTokens.ACCESS_TOKENS.ID }, true);
        public static Index ALBUM_TOKENS_ALBUM_TOKENS_IBFK_1 = Internal.createIndex("album_tokens_ibfk_1", AlbumTokens.ALBUM_TOKENS, new OrderField[] { AlbumTokens.ALBUM_TOKENS.ALBUM_ID }, false);
        public static Index ALBUM_TOKENS_ALBUM_TOKENS_IBFK_2 = Internal.createIndex("album_tokens_ibfk_2", AlbumTokens.ALBUM_TOKENS, new OrderField[] { AlbumTokens.ALBUM_TOKENS.ACCESS_TOKEN_ID }, false);
        public static Index ALBUM_TOKENS_PRIMARY = Internal.createIndex("PRIMARY", AlbumTokens.ALBUM_TOKENS, new OrderField[] { AlbumTokens.ALBUM_TOKENS.ALBUM_ID, AlbumTokens.ALBUM_TOKENS.ACCESS_TOKEN_ID }, true);
        public static Index ALBUMS_BANNER_IMAGE_ID = Internal.createIndex("banner_image_id", Albums.ALBUMS, new OrderField[] { Albums.ALBUMS.BANNER_IMAGE_ID }, false);
        public static Index ALBUMS_PARENT_ALBUM_ID = Internal.createIndex("parent_album_id", Albums.ALBUMS, new OrderField[] { Albums.ALBUMS.PARENT_ALBUM_ID }, false);
        public static Index ALBUMS_PRIMARY = Internal.createIndex("PRIMARY", Albums.ALBUMS, new OrderField[] { Albums.ALBUMS.ID }, true);
        public static Index IMAGE_TAGS_PRIMARY = Internal.createIndex("PRIMARY", ImageTags.IMAGE_TAGS, new OrderField[] { ImageTags.IMAGE_TAGS.IMAGE_ID, ImageTags.IMAGE_TAGS.TAG_ID }, true);
        public static Index IMAGE_TAGS_TAG_ID = Internal.createIndex("tag_id", ImageTags.IMAGE_TAGS, new OrderField[] { ImageTags.IMAGE_TAGS.TAG_ID }, false);
        public static Index IMAGES_IMAGES_DATA_TYPE = Internal.createIndex("images_data_type", Images.IMAGES, new OrderField[] { Images.IMAGES.DATA_TYPE }, false);
        public static Index IMAGES_IMAGES_IBFK_1 = Internal.createIndex("images_ibfk_1", Images.IMAGES, new OrderField[] { Images.IMAGES.ALBUM_ID }, false);
        public static Index IMAGES_IMAGES_IS_PUBLIC = Internal.createIndex("images_is_public", Images.IMAGES, new OrderField[] { Images.IMAGES.IS_PUBLIC }, false);
        public static Index IMAGES_PRIMARY = Internal.createIndex("PRIMARY", Images.IMAGES, new OrderField[] { Images.IMAGES.ID }, true);
        public static Index SCHEMA_VERSION_PRIMARY = Internal.createIndex("PRIMARY", SchemaVersion.SCHEMA_VERSION, new OrderField[] { SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK }, true);
        public static Index SCHEMA_VERSION_SCHEMA_VERSION_S_IDX = Internal.createIndex("schema_version_s_idx", SchemaVersion.SCHEMA_VERSION, new OrderField[] { SchemaVersion.SCHEMA_VERSION.SUCCESS }, false);
        public static Index TAGS_PRIMARY = Internal.createIndex("PRIMARY", Tags.TAGS, new OrderField[] { Tags.TAGS.ID }, true);
    }
}
