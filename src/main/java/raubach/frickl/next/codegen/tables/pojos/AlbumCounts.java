/*
 * This file is generated by jOOQ.
 */
package raubach.frickl.next.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumCounts implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   albumId;
    private Integer   imageCount;
    private Integer   imageCountPublic;
    private Integer   albumCount;
    private Integer   imageViewCount;
    private Timestamp newestImage;
    private Timestamp oldestImage;

    public AlbumCounts() {}

    public AlbumCounts(AlbumCounts value) {
        this.albumId = value.albumId;
        this.imageCount = value.imageCount;
        this.imageCountPublic = value.imageCountPublic;
        this.albumCount = value.albumCount;
        this.imageViewCount = value.imageViewCount;
        this.newestImage = value.newestImage;
        this.oldestImage = value.oldestImage;
    }

    public AlbumCounts(
        Integer   albumId,
        Integer   imageCount,
        Integer   imageCountPublic,
        Integer   albumCount,
        Integer   imageViewCount,
        Timestamp newestImage,
        Timestamp oldestImage
    ) {
        this.albumId = albumId;
        this.imageCount = imageCount;
        this.imageCountPublic = imageCountPublic;
        this.albumCount = albumCount;
        this.imageViewCount = imageViewCount;
        this.newestImage = newestImage;
        this.oldestImage = oldestImage;
    }

    /**
     * Getter for <code>frickl.album_counts.album_id</code>.
     */
    public Integer getAlbumId() {
        return this.albumId;
    }

    /**
     * Setter for <code>frickl.album_counts.album_id</code>.
     */
    public void setAlbumId(Integer albumId) {
        this.albumId = albumId;
    }

    /**
     * Getter for <code>frickl.album_counts.image_count</code>.
     */
    public Integer getImageCount() {
        return this.imageCount;
    }

    /**
     * Setter for <code>frickl.album_counts.image_count</code>.
     */
    public void setImageCount(Integer imageCount) {
        this.imageCount = imageCount;
    }

    /**
     * Getter for <code>frickl.album_counts.image_count_public</code>.
     */
    public Integer getImageCountPublic() {
        return this.imageCountPublic;
    }

    /**
     * Setter for <code>frickl.album_counts.image_count_public</code>.
     */
    public void setImageCountPublic(Integer imageCountPublic) {
        this.imageCountPublic = imageCountPublic;
    }

    /**
     * Getter for <code>frickl.album_counts.album_count</code>.
     */
    public Integer getAlbumCount() {
        return this.albumCount;
    }

    /**
     * Setter for <code>frickl.album_counts.album_count</code>.
     */
    public void setAlbumCount(Integer albumCount) {
        this.albumCount = albumCount;
    }

    /**
     * Getter for <code>frickl.album_counts.image_view_count</code>.
     */
    public Integer getImageViewCount() {
        return this.imageViewCount;
    }

    /**
     * Setter for <code>frickl.album_counts.image_view_count</code>.
     */
    public void setImageViewCount(Integer imageViewCount) {
        this.imageViewCount = imageViewCount;
    }

    /**
     * Getter for <code>frickl.album_counts.newest_image</code>.
     */
    public Timestamp getNewestImage() {
        return this.newestImage;
    }

    /**
     * Setter for <code>frickl.album_counts.newest_image</code>.
     */
    public void setNewestImage(Timestamp newestImage) {
        this.newestImage = newestImage;
    }

    /**
     * Getter for <code>frickl.album_counts.oldest_image</code>.
     */
    public Timestamp getOldestImage() {
        return this.oldestImage;
    }

    /**
     * Setter for <code>frickl.album_counts.oldest_image</code>.
     */
    public void setOldestImage(Timestamp oldestImage) {
        this.oldestImage = oldestImage;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AlbumCounts (");

        sb.append(albumId);
        sb.append(", ").append(imageCount);
        sb.append(", ").append(imageCountPublic);
        sb.append(", ").append(albumCount);
        sb.append(", ").append(imageViewCount);
        sb.append(", ").append(newestImage);
        sb.append(", ").append(oldestImage);

        sb.append(")");
        return sb.toString();
    }
}
