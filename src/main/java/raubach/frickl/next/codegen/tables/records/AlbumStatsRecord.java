/*
 * This file is generated by jOOQ.
 */
package raubach.frickl.next.codegen.tables.records;


import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.TableRecordImpl;

import raubach.frickl.next.codegen.tables.AlbumStats;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumStatsRecord extends TableRecordImpl<AlbumStatsRecord> implements Record16<Integer, String, String, String, Integer, Long, Integer, Timestamp, Timestamp, Integer, Integer, Integer, Integer, Integer, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>frickl.album_stats.id</code>. Auto incremented id of
     * this table.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>frickl.album_stats.id</code>. Auto incremented id of
     * this table.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>frickl.album_stats.name</code>. The name of the album.
     * Should ideally be relatively short.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>frickl.album_stats.name</code>. The name of the album.
     * Should ideally be relatively short.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>frickl.album_stats.description</code>. Optional
     * description of the album.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>frickl.album_stats.description</code>. Optional
     * description of the album.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>frickl.album_stats.path</code>. The path to the album
     * relative to the base path of the setup.
     */
    public void setPath(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>frickl.album_stats.path</code>. The path to the album
     * relative to the base path of the setup.
     */
    public String getPath() {
        return (String) get(3);
    }

    /**
     * Setter for <code>frickl.album_stats.banner_image_id</code>. Optional
     * banner image id. This image will be shown to visually represent this
     * album.
     */
    public void setBannerImageId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>frickl.album_stats.banner_image_id</code>. Optional
     * banner image id. This image will be shown to visually represent this
     * album.
     */
    public Integer getBannerImageId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>frickl.album_stats.banner_image_public_id</code>.
     */
    public void setBannerImagePublicId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>frickl.album_stats.banner_image_public_id</code>.
     */
    public Long getBannerImagePublicId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>frickl.album_stats.parent_album_id</code>. Optional
     * parent album id. If this album is a sub-album of another album, this
     * parent album can be defined here.
     */
    public void setParentAlbumId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>frickl.album_stats.parent_album_id</code>. Optional
     * parent album id. If this album is a sub-album of another album, this
     * parent album can be defined here.
     */
    public Integer getParentAlbumId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>frickl.album_stats.created_on</code>. When this record
     * has been created.
     */
    public void setCreatedOn(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>frickl.album_stats.created_on</code>. When this record
     * has been created.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>frickl.album_stats.updated_on</code>. When this record
     * has last been updated.
     */
    public void setUpdatedOn(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>frickl.album_stats.updated_on</code>. When this record
     * has last been updated.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>frickl.album_stats.album_id</code>.
     */
    public void setAlbumId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>frickl.album_stats.album_id</code>.
     */
    public Integer getAlbumId() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>frickl.album_stats.image_count</code>.
     */
    public void setImageCount(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>frickl.album_stats.image_count</code>.
     */
    public Integer getImageCount() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>frickl.album_stats.image_count_public</code>.
     */
    public void setImageCountPublic(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>frickl.album_stats.image_count_public</code>.
     */
    public Integer getImageCountPublic() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>frickl.album_stats.album_count</code>.
     */
    public void setAlbumCount(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>frickl.album_stats.album_count</code>.
     */
    public Integer getAlbumCount() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>frickl.album_stats.image_view_count</code>.
     */
    public void setImageViewCount(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>frickl.album_stats.image_view_count</code>.
     */
    public Integer getImageViewCount() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>frickl.album_stats.newest_image</code>.
     */
    public void setNewestImage(Timestamp value) {
        set(14, value);
    }

    /**
     * Getter for <code>frickl.album_stats.newest_image</code>.
     */
    public Timestamp getNewestImage() {
        return (Timestamp) get(14);
    }

    /**
     * Setter for <code>frickl.album_stats.oldest_image</code>.
     */
    public void setOldestImage(Timestamp value) {
        set(15, value);
    }

    /**
     * Getter for <code>frickl.album_stats.oldest_image</code>.
     */
    public Timestamp getOldestImage() {
        return (Timestamp) get(15);
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, String, String, String, Integer, Long, Integer, Timestamp, Timestamp, Integer, Integer, Integer, Integer, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<Integer, String, String, String, Integer, Long, Integer, Timestamp, Timestamp, Integer, Integer, Integer, Integer, Integer, Timestamp, Timestamp> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AlbumStats.ALBUM_STATS.ID;
    }

    @Override
    public Field<String> field2() {
        return AlbumStats.ALBUM_STATS.NAME;
    }

    @Override
    public Field<String> field3() {
        return AlbumStats.ALBUM_STATS.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return AlbumStats.ALBUM_STATS.PATH;
    }

    @Override
    public Field<Integer> field5() {
        return AlbumStats.ALBUM_STATS.BANNER_IMAGE_ID;
    }

    @Override
    public Field<Long> field6() {
        return AlbumStats.ALBUM_STATS.BANNER_IMAGE_PUBLIC_ID;
    }

    @Override
    public Field<Integer> field7() {
        return AlbumStats.ALBUM_STATS.PARENT_ALBUM_ID;
    }

    @Override
    public Field<Timestamp> field8() {
        return AlbumStats.ALBUM_STATS.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field9() {
        return AlbumStats.ALBUM_STATS.UPDATED_ON;
    }

    @Override
    public Field<Integer> field10() {
        return AlbumStats.ALBUM_STATS.ALBUM_ID;
    }

    @Override
    public Field<Integer> field11() {
        return AlbumStats.ALBUM_STATS.IMAGE_COUNT;
    }

    @Override
    public Field<Integer> field12() {
        return AlbumStats.ALBUM_STATS.IMAGE_COUNT_PUBLIC;
    }

    @Override
    public Field<Integer> field13() {
        return AlbumStats.ALBUM_STATS.ALBUM_COUNT;
    }

    @Override
    public Field<Integer> field14() {
        return AlbumStats.ALBUM_STATS.IMAGE_VIEW_COUNT;
    }

    @Override
    public Field<Timestamp> field15() {
        return AlbumStats.ALBUM_STATS.NEWEST_IMAGE;
    }

    @Override
    public Field<Timestamp> field16() {
        return AlbumStats.ALBUM_STATS.OLDEST_IMAGE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getPath();
    }

    @Override
    public Integer component5() {
        return getBannerImageId();
    }

    @Override
    public Long component6() {
        return getBannerImagePublicId();
    }

    @Override
    public Integer component7() {
        return getParentAlbumId();
    }

    @Override
    public Timestamp component8() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component9() {
        return getUpdatedOn();
    }

    @Override
    public Integer component10() {
        return getAlbumId();
    }

    @Override
    public Integer component11() {
        return getImageCount();
    }

    @Override
    public Integer component12() {
        return getImageCountPublic();
    }

    @Override
    public Integer component13() {
        return getAlbumCount();
    }

    @Override
    public Integer component14() {
        return getImageViewCount();
    }

    @Override
    public Timestamp component15() {
        return getNewestImage();
    }

    @Override
    public Timestamp component16() {
        return getOldestImage();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getPath();
    }

    @Override
    public Integer value5() {
        return getBannerImageId();
    }

    @Override
    public Long value6() {
        return getBannerImagePublicId();
    }

    @Override
    public Integer value7() {
        return getParentAlbumId();
    }

    @Override
    public Timestamp value8() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value9() {
        return getUpdatedOn();
    }

    @Override
    public Integer value10() {
        return getAlbumId();
    }

    @Override
    public Integer value11() {
        return getImageCount();
    }

    @Override
    public Integer value12() {
        return getImageCountPublic();
    }

    @Override
    public Integer value13() {
        return getAlbumCount();
    }

    @Override
    public Integer value14() {
        return getImageViewCount();
    }

    @Override
    public Timestamp value15() {
        return getNewestImage();
    }

    @Override
    public Timestamp value16() {
        return getOldestImage();
    }

    @Override
    public AlbumStatsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value4(String value) {
        setPath(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value5(Integer value) {
        setBannerImageId(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value6(Long value) {
        setBannerImagePublicId(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value7(Integer value) {
        setParentAlbumId(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value8(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value9(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value10(Integer value) {
        setAlbumId(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value11(Integer value) {
        setImageCount(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value12(Integer value) {
        setImageCountPublic(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value13(Integer value) {
        setAlbumCount(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value14(Integer value) {
        setImageViewCount(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value15(Timestamp value) {
        setNewestImage(value);
        return this;
    }

    @Override
    public AlbumStatsRecord value16(Timestamp value) {
        setOldestImage(value);
        return this;
    }

    @Override
    public AlbumStatsRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Long value6, Integer value7, Timestamp value8, Timestamp value9, Integer value10, Integer value11, Integer value12, Integer value13, Integer value14, Timestamp value15, Timestamp value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlbumStatsRecord
     */
    public AlbumStatsRecord() {
        super(AlbumStats.ALBUM_STATS);
    }

    /**
     * Create a detached, initialised AlbumStatsRecord
     */
    public AlbumStatsRecord(Integer id, String name, String description, String path, Integer bannerImageId, Long bannerImagePublicId, Integer parentAlbumId, Timestamp createdOn, Timestamp updatedOn, Integer albumId, Integer imageCount, Integer imageCountPublic, Integer albumCount, Integer imageViewCount, Timestamp newestImage, Timestamp oldestImage) {
        super(AlbumStats.ALBUM_STATS);

        setId(id);
        setName(name);
        setDescription(description);
        setPath(path);
        setBannerImageId(bannerImageId);
        setBannerImagePublicId(bannerImagePublicId);
        setParentAlbumId(parentAlbumId);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
        setAlbumId(albumId);
        setImageCount(imageCount);
        setImageCountPublic(imageCountPublic);
        setAlbumCount(albumCount);
        setImageViewCount(imageViewCount);
        setNewestImage(newestImage);
        setOldestImage(oldestImage);
    }

    /**
     * Create a detached, initialised AlbumStatsRecord
     */
    public AlbumStatsRecord(raubach.frickl.next.codegen.tables.pojos.AlbumStats value) {
        super(AlbumStats.ALBUM_STATS);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setDescription(value.getDescription());
            setPath(value.getPath());
            setBannerImageId(value.getBannerImageId());
            setBannerImagePublicId(value.getBannerImagePublicId());
            setParentAlbumId(value.getParentAlbumId());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
            setAlbumId(value.getAlbumId());
            setImageCount(value.getImageCount());
            setImageCountPublic(value.getImageCountPublic());
            setAlbumCount(value.getAlbumCount());
            setImageViewCount(value.getImageViewCount());
            setNewestImage(value.getNewestImage());
            setOldestImage(value.getOldestImage());
        }
    }
}
