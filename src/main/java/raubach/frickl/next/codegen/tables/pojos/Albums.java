/*
 * This file is generated by jOOQ.
 */
package raubach.frickl.next.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;


/**
 * This table contain  s all albums in Frickl. Albums correspond to image
 * folders on the file system.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Albums implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   id;
    private String    name;
    private String    description;
    private String    path;
    private Integer   bannerImageId;
    private Integer   parentAlbumId;
    private Integer   createdBy;
    private Timestamp createdOn;
    private Timestamp updatedOn;

    public Albums() {}

    public Albums(Albums value) {
        this.id = value.id;
        this.name = value.name;
        this.description = value.description;
        this.path = value.path;
        this.bannerImageId = value.bannerImageId;
        this.parentAlbumId = value.parentAlbumId;
        this.createdBy = value.createdBy;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public Albums(
        Integer   id,
        String    name,
        String    description,
        String    path,
        Integer   bannerImageId,
        Integer   parentAlbumId,
        Integer   createdBy,
        Timestamp createdOn,
        Timestamp updatedOn
    ) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.path = path;
        this.bannerImageId = bannerImageId;
        this.parentAlbumId = parentAlbumId;
        this.createdBy = createdBy;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>frickl.albums.id</code>. Auto incremented id of this
     * table.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>frickl.albums.id</code>. Auto incremented id of this
     * table.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>frickl.albums.name</code>. The name of the album. Should
     * ideally be relatively short.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>frickl.albums.name</code>. The name of the album. Should
     * ideally be relatively short.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>frickl.albums.description</code>. Optional description
     * of the album.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>frickl.albums.description</code>. Optional description
     * of the album.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>frickl.albums.path</code>. The path to the album
     * relative to the base path of the setup.
     */
    public String getPath() {
        return this.path;
    }

    /**
     * Setter for <code>frickl.albums.path</code>. The path to the album
     * relative to the base path of the setup.
     */
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Getter for <code>frickl.albums.banner_image_id</code>. Optional banner
     * image id. This image will be shown to visually represent this album.
     */
    public Integer getBannerImageId() {
        return this.bannerImageId;
    }

    /**
     * Setter for <code>frickl.albums.banner_image_id</code>. Optional banner
     * image id. This image will be shown to visually represent this album.
     */
    public void setBannerImageId(Integer bannerImageId) {
        this.bannerImageId = bannerImageId;
    }

    /**
     * Getter for <code>frickl.albums.parent_album_id</code>. Optional parent
     * album id. If this album is a sub-album of another album, this parent
     * album can be defined here.
     */
    public Integer getParentAlbumId() {
        return this.parentAlbumId;
    }

    /**
     * Setter for <code>frickl.albums.parent_album_id</code>. Optional parent
     * album id. If this album is a sub-album of another album, this parent
     * album can be defined here.
     */
    public void setParentAlbumId(Integer parentAlbumId) {
        this.parentAlbumId = parentAlbumId;
    }

    /**
     * Getter for <code>frickl.albums.created_by</code>. Optional user id. This
     * indicates which user created this album.
     */
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>frickl.albums.created_by</code>. Optional user id. This
     * indicates which user created this album.
     */
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Getter for <code>frickl.albums.created_on</code>. When this record has
     * been created.
     */
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>frickl.albums.created_on</code>. When this record has
     * been created.
     */
    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>frickl.albums.updated_on</code>. When this record has
     * last been updated.
     */
    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>frickl.albums.updated_on</code>. When this record has
     * last been updated.
     */
    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Albums (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(path);
        sb.append(", ").append(bannerImageId);
        sb.append(", ").append(parentAlbumId);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
}
