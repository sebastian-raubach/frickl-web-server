/*
 * This file is generated by jOOQ.
 */
package raubach.frickl.next.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;


/**
 * This table contains all tokens that can be used to access folders that aren't
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccessTokens implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   id;
    private String    token;
    private Timestamp expiresOn;
    private Timestamp createdOn;
    private Timestamp updatedOn;

    public AccessTokens() {}

    public AccessTokens(AccessTokens value) {
        this.id = value.id;
        this.token = value.token;
        this.expiresOn = value.expiresOn;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public AccessTokens(
        Integer   id,
        String    token,
        Timestamp expiresOn,
        Timestamp createdOn,
        Timestamp updatedOn
    ) {
        this.id = id;
        this.token = token;
        this.expiresOn = expiresOn;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>frickl.access_tokens.id</code>. Auto incremented id of
     * this table.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>frickl.access_tokens.id</code>. Auto incremented id of
     * this table.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>frickl.access_tokens.token</code>. The access token.
     */
    public String getToken() {
        return this.token;
    }

    /**
     * Setter for <code>frickl.access_tokens.token</code>. The access token.
     */
    public void setToken(String token) {
        this.token = token;
    }

    /**
     * Getter for <code>frickl.access_tokens.expires_on</code>. When this token
     * expires.
     */
    public Timestamp getExpiresOn() {
        return this.expiresOn;
    }

    /**
     * Setter for <code>frickl.access_tokens.expires_on</code>. When this token
     * expires.
     */
    public void setExpiresOn(Timestamp expiresOn) {
        this.expiresOn = expiresOn;
    }

    /**
     * Getter for <code>frickl.access_tokens.created_on</code>. When this record
     * has been created.
     */
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>frickl.access_tokens.created_on</code>. When this record
     * has been created.
     */
    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>frickl.access_tokens.updated_on</code>. When this record
     * has last been updated.
     */
    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>frickl.access_tokens.updated_on</code>. When this record
     * has last been updated.
     */
    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AccessTokens (");

        sb.append(id);
        sb.append(", ").append(token);
        sb.append(", ").append(expiresOn);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
}
